{"version":3,"sources":["AddTask/AddTask.js","ToDo/ToDo.js","Search/Search.js","NavBar/NavBar.js","App/App.js","index.js"],"names":["AddTask","props","handleKeyPress","event","key","state","myInput","newList","toDo","items","setState","i","length","window","localStorage","setItem","onChangeValue","target","value","render","className","onChange","onKeyPress","placeholder","React","Component","ToDo","setCompleted","index","arrayLen","getItem","completed","includes","filter","e","bool","setItemState","item","class_name","navSelected","toLowerCase","indexOf","searchQuery","onClick","completedList","toDoList","push","this","map","Search","app","setSearchQuery","NavBar","renderListItemColor","selected","setSelected","setNavSelected","App","query","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d0ca2118.chunk.js","sourcesContent":["import './AddTask.css';\r\nimport React from 'react';\r\n\r\nclass AddTask extends React.Component {\r\n  constructor (props) {\r\n    super();\r\n    this.state = {\r\n      myInput : ''\r\n    };\r\n    this.toDo  = props.toDo;\r\n  }  \r\n\r\n  handleKeyPress = (event) => {\r\n    if(event.key === 'Enter'){\r\n      if (this.state.myInput){\r\n        const newList = [...this.toDo.state.items, this.state.myInput];\r\n        this.toDo.setState({\r\n          items: newList\r\n        });\r\n        \r\n        for (var i = 0; i < newList.length; i++){\r\n          window.localStorage.setItem('to-do-items-' + i, newList[i]);\r\n        }\r\n        \r\n        window.localStorage.setItem('to-do-len', newList.length);\r\n        \r\n        this.setState({\r\n          myInput : ''\r\n        });\r\n      }\r\n    }\r\n  }\r\n  \r\n  onChangeValue = (event) => {\r\n    this.setState({\r\n      myInput : event.target.value\r\n    });\r\n  }\r\n\r\n  render = () => {\r\n    return (<div className  = \"add-task\">\r\n              <input  \r\n                onChange    = {this.onChangeValue} \r\n                onKeyPress  = {this.handleKeyPress}\r\n                placeholder = \"Add a new task\"\r\n                value       = {this.state.myInput} \r\n              />\r\n            </div>);\r\n  }\r\n}\r\n\r\nexport default AddTask;","import './ToDo.css';\r\nimport React from 'react';\r\nimport AddTask from '../AddTask/AddTask.js'; \r\n\r\nclass ToDo extends React.Component {\r\n  constructor() {\r\n    super();\r\n    var completedList = []\r\n    var toDoList      = []\r\n\r\n    for (var i = 0; i < (window.localStorage.getItem('to-do-len') || 0); i++){\r\n      toDoList.push(window.localStorage.getItem('to-do-items-' + i));    \r\n      if (window.localStorage.getItem('to-do-completed-' + i) === 'true'){\r\n        completedList.push(i)\r\n      }\r\n    }\r\n    \r\n    this.state = {\r\n      completed : completedList,\r\n      items     : toDoList\r\n    };\r\n  }  \r\n\r\n  render() {\r\n    this.navSelected = this.props.navSelected;\r\n    this.searchQuery = this.props.searchQuery;\r\n    return (<div className  = \"to-do-container\">\r\n              <AddTask toDo = {this} />\r\n              <ul>\r\n                {\r\n                  this.state.items.map((item, index) => this.setItemState(index, item))\r\n                }\r\n              </ul>\r\n            </div>);\r\n  }\r\n\r\n  setCompleted = (index) => {\r\n    let newList;\r\n    let arrayLen = (window.localStorage.getItem('to-do-len') || 0);\r\n    if (this.state.completed.includes(index)){\r\n      newList = this.state.completed.filter(function(e) { return e !== index })\r\n    } else {\r\n      newList = [...this.state.completed, index];\r\n    }\r\n\r\n    this.setState({\r\n      completed : newList\r\n    });\r\n\r\n    for (var i = 0; i <= arrayLen; i++){\r\n      let bool = false;\r\n      if (newList.includes(i)){\r\n        bool = true;\r\n      }\r\n      window.localStorage.setItem('to-do-completed-' + i, bool);\r\n    }\r\n  }\r\n\r\n  setItemState = (index, item) => {\r\n    let class_name;\r\n    if (this.state.completed.includes(index)){\r\n      class_name = \"completed\";\r\n      if (this.navSelected === 2)\r\n        return;\r\n    } else {\r\n      class_name = \"remaining\";\r\n      if (this.navSelected === 1)\r\n        return;\r\n    }\r\n    if (item.toLowerCase().indexOf(this.searchQuery) !== -1){\r\n      return (<li \r\n                className = \"item-container clearfix\"\r\n                key       = {index} \r\n              >\r\n                <div className = {class_name + \" item\"}>\r\n                  {item}\r\n                </div>\r\n                <div \r\n                  className = {class_name + \"-check check\"} \r\n                  onClick   = {() => this.setCompleted(index)} \r\n                />\r\n              </li>);\r\n    }\r\n    return;\r\n  }\r\n\r\n}\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport './Search.css';\r\n\r\nclass Search extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      myInput : ''\r\n    };\r\n  }  \r\n\r\n  onChangeValue = (event) => {\r\n    this.setState({\r\n      myInput : event.target.value,\r\n    });\r\n    this.props.app.setSearchQuery(event.target.value || '');\r\n  }\r\n\r\n  render() {\r\n    return (<div className  = \"search\">\r\n              <input  \r\n                onChange    = {this.onChangeValue} \r\n                placeholder = \"Search\"\r\n                value       = {this.state.myInput} \r\n              />\r\n            </div>);\r\n  }\r\n}\r\n\r\nexport default Search;","import './NavBar.css';\r\nimport React from 'react';\r\n\r\nclass NavBar extends React.Component {\r\n  constructor () {\r\n    super();\r\n    this.state = {\r\n      items    : ['Home', 'Completed', 'Remaining'],\r\n      selected : 0\r\n    };\r\n  }\r\n\r\n  render = () => {\r\n    return (<div className  = \"nav-bar\">\r\n              <ul className = \"nav-items\">\r\n                {\r\n                  this.state.items.map((item, index) => this.renderListItemColor(index, item))\r\n                }\r\n              </ul>    \r\n            </div>);\r\n  }\r\n\r\n  renderListItemColor = (index, item) => {\r\n    let class_name;\r\n    if (index === this.state.selected){\r\n      class_name = \"selected nav-item\";\r\n    } else {\r\n      class_name = \"not-selected nav-item\";\r\n    }\r\n    return (<li \r\n              className = {class_name} \r\n              key       = {index} \r\n              onClick   = {() => this.setSelected(index)}\r\n            > \r\n              {item} \r\n            </li>);\r\n  }\r\n  \r\n  setSelected = (index) => {\r\n    this.setState({\r\n      selected : index\r\n    });\r\n    this.props.app.setNavSelected(index);\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\nimport ToDo from '../ToDo/ToDo.js';\nimport Search from'../Search/Search.js';\nimport NavBar from '../NavBar/NavBar.js';\n\nclass App extends React.Component {\n  constructor () {\n    super();\n    this.state = {\n      navSelected : 0,\n      searchQuery : ''\n    };\n  }\n\n  setNavSelected = (index) => {\n    this.setState({\n      navSelected : index\n    });\n  }\n\n  setSearchQuery = (query) => {\n    this.setState({\n      searchQuery : query\n    });\n  }\n\n  render = () => {\n    return (<div className=\"App\">\n              <NavBar app = {this} />\n              <Search app = {this} />\n              <ToDo \n                navSelected = {this.state.navSelected} \n                searchQuery = {this.state.searchQuery}\n              />\n            </div>);\n  }\n}\n\nexport default App;","import './index.css';\nimport React from 'react';\nimport App from './App/App';\nimport ReactDOM from 'react-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}